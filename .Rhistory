pkgdown::build_site()
data("web_service_data")
setwd("/Users/dan")
setwd("/Users/dan/workspace/R/rollup/")
data("web_service_data")
web_service_data %>% head
library(dplyr)
library(dplyr)
library(rollup)
data("web_service_data")
web_service_data %>% head
library(dplyr)
library(rollup)
# Load sample data
# date_id : yyyy-mm-dd
# id : user id
# gender : male, female
# age : age band (categorical)
# page_view_cnt : pageview count of user on date_id
# producte_view_cnt : product view count of user on date_id
data("web_service_data")
web_service_data %>% head
# avg_pv_cnt group by (gender, age, (gender, age))
web_service_data %>% filter(date_id == '2024-06-30' & gender != "N") %>%
group_by(gender, age) %>% grouping_sets('gender', 'age', c('gender','age'), NA) %>%
summarize(avg_pv_cnt = mean(page_view_cnt))
library(tidyr)
# avg_pv_cnt group by (gender, age, (gender, age))
web_service_data %>% filter(date_id == '2024-06-30' & gender != "N") %>%
group_by(gender, age) %>% grouping_sets('gender', 'age', c('gender','age'), NA) %>%
summarize(avg_pv_cnt = mean(page_view_cnt))
install.packages("rollup")
install.packages("rollup")
library(rollup)
# avg_pv_cnt group by (gender, age, (gender, age))
web_service_data %>% filter(date_id == '2024-06-30' & gender != "N") %>%
group_by(gender, age) %>% grouping_sets('gender', 'age', c('gender','age'), NA) %>%
summarize(avg_pv_cnt = mean(page_view_cnt))
remove.packages("rollup")
library(rollup)
remove.packages("rollup")
library(rollup)
rollup.libPath()
libPath()
libPaths()
.libPaths()
find.package("rollup")
library(rollup)
install.packages("rollup")
library(dplyr)
library(dplyr)
library(rollup)
library(dplyr)
library(rollup)
# Load sample data
# date_id : yyyy-mm-dd
# id : user id
# gender : male, female
# age : age band (categorical)
# page_view_cnt : pageview count of user on date_id
# producte_view_cnt : product view count of user on date_id
data("web_service_data")
web_service_data %>% head
# avg_pv_cnt group by (gender, age, (gender, age))
web_service_data %>% filter(date_id == '2024-06-30' & gender != "N") %>%
group_by(gender, age) %>% grouping_sets('gender', 'age', c('gender','age'), NA) %>%
summarize(avg_pv_cnt = mean(page_view_cnt))
# avg_pv_cnt group by ((gender, age, product_view_cnt_cat), product_view_cnt_cat)
web_service_data %>% filter(date_id == '2024-06-30' & gender != "N") %>%
group_by(gender, age, product_view_cnt_cat) %>% grouping_sets('product_view_cnt_cat', c('product_view_cnt_cat', 'gender','age')) %>%
summarize(avg_pv_cnt = mean(page_view_cnt)) %>% pivot_wider(names_from = product_view_cnt_cat, values_from = avg_pv_cnt)
web_service_data_processed <- web_service_data %>% mutate(
age_band_big = case_when(
age_band >= 10 & age_band < 40 ~ 'young',
age_band >= 40 ~ 'old'
)
)
web_service_data_processed <- web_service_data %>% mutate(
age_big = case_when(
age >= 10 & age < 40 ~ 'young',
age >= 40 ~ 'old'
)
)
web_service_data %>%
group_by(date_id) %>% with_rollup() %>%
summarize(user_cnt = n_distinct(if_else(page_view_cnt > 0, id, NA)))
web_service_data_processed %>% group_by(age_big, age) %>% summarize(
user_cnt = n_distinct(id),
avg_pv_cnt = mean(page_view_cnt)
)
web_service_data_processed <- web_service_data %>% mutate(
age_big = case_when(
age %in% c(10,20,30) ~ 'young',
age %in% c(40,50,60) ~ 'old'
)
)
web_service_data_processed %>% group_by(age_big, age) %>% summarize(
user_cnt = n_distinct(id),
avg_pv_cnt = mean(page_view_cnt)
)
web_service_data_processed %>% group_by(age_big, age) %>% with_cube() %>% summarize(
user_cnt = n_distinct(id),
avg_pv_cnt = mean(page_view_cnt)
)
library(dplyr)
library(rollup)
# Load sample data
# The `web_service_data` contains user's demographic information, along with daily page view counts and product view counts for June 2024.
# date_id : yyyy-mm-dd
# id : user unique id
# gender : male(M), female(F)
# age : age band (categorical)
# page_view_cnt : pageview count of user on date_id
# producte_view_cnt : product view count of user on date_id
data("web_service_data")
web_service_data %>% head
# Therefore, if there are results aggregated by "age_big & age", marginal aggregates for "age" are not necessary.
web_service_data_processed %>% group_by(age_big, age) %>% with_rollup() %>% summarize(
user_cnt = n_distinct(id),
avg_pv_cnt = mean(page_view_cnt)
)
# with_rollup equals to grouping_sets with all possible combinations in descending order
web_service_data_processed %>% group_by(age_big, age) %>% grouping_sets(c("age_big","age"),"age_big",NA) %>% summarize(
user_cnt = n_distinct(id),
avg_pv_cnt = mean(page_view_cnt)
)
# Therefore, if there are results aggregated by "age_big & age", marginal aggregates for "age" are not necessary.
# The following code calculates the aggregation results for "age_big & age", marginal aggregates for "age_big", and aggregates for the entire data set.
web_service_data_processed %>% group_by(age_big, age) %>% with_rollup() %>% summarize(
user_cnt = n_distinct(id),
avg_pv_cnt = mean(page_view_cnt)
)
# `with_rollup()` equals to grouping_sets with combinations in descending order.
web_service_data_processed %>% group_by(age_big, age) %>% grouping_sets(c("age_big","age"),"age_big",NA) %>% summarize(
user_cnt = n_distinct(id),
avg_pv_cnt = mean(page_view_cnt)
)
# Therefore, if there are results aggregated by "age_big & age", marginal aggregates for "age" are not necessary.
# The following code calculates the aggregation results for "age_big & age", marginal aggregates for "age_big", and aggregates for the entire data set.
web_service_data_processed %>% group_by(age_big, age) %>% with_rollup() %>% summarize(
user_cnt = n_distinct(id),
avg_pv_cnt = mean(page_view_cnt)
)
# `with_rollup()` equals to grouping_sets with combinations in descending order.
web_service_data_processed %>% group_by(age_big, age) %>% grouping_sets(c("age_big","age"),"age_big",NA) %>% summarize(
user_cnt = n_distinct(id),
avg_pv_cnt = mean(page_view_cnt)
)
# Therefore, if there are results aggregated by "age_big & age", marginal aggregates for "age" are not necessary.
# The following code calculates the aggregation results for "age_big & age", marginal aggregates for "age_big", and aggregates for the entire data set.
web_service_data_processed %>% group_by(age_big, age) %>% with_rollup() %>% summarize(
user_cnt = n_distinct(id),
avg_pv_cnt = mean(page_view_cnt)
)
# `with_rollup()` equals to grouping_sets with combinations in descending order.
web_service_data_processed %>% group_by(age_big, age) %>% grouping_sets(c("age_big","age"),"age_big",NA) %>% summarize(
user_cnt = n_distinct(id),
avg_pv_cnt = mean(page_view_cnt)
)
build_site()
library(pkgdown)
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
library(dplyr)
library(rollup)
data("web_service_data")
web_service_data %>% head
# From Github
library(devtools)
devtools::install_github("JuYoungAhn/rollup")
devtools::install_github("JuYoungAhn/rollup")
data("web_service_data")
build_site()
build_site()
